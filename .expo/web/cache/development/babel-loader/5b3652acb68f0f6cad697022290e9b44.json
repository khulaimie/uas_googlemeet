{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\uas_googlemeet\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\nimport Index from \"./lib/scene\";\nimport { StyleProvider, Root } from 'native-base';\nimport getTheme from \"./native-base-theme/components\";\nimport material from \"./native-base-theme/variables/material\";\nimport { NavigationContainer } from '@react-navigation/native';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isReady: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(_objectSpread({\n                Roboto: require('native-base/Fonts/Roboto.ttf'),\n                Roboto_medium: require('native-base/Fonts/Roboto_medium.ttf'),\n                Inconsolata: require(\"./assets/fonts/Inconsolata/Inconsolata.ttf\")\n              }, Ionicons.font)));\n\n            case 2:\n              this.setState({\n                isReady: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isReady) {\n        return React.createElement(AppLoading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, React.createElement(StyleProvider, {\n        style: getTheme(material),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, React.createElement(Root, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, React.createElement(Index, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["F:/uas_googlemeet/App.js"],"names":["React","AppLoading","Font","Ionicons","Index","StyleProvider","Root","getTheme","material","NavigationContainer","App","props","state","isReady","loadAsync","Roboto","require","Roboto_medium","Inconsolata","font","setState","Component","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,KAAP;AACA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,aAApC;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;;IAEqBC,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAFiB;AAKlB;;;;;;;;;;+CAGOX,IAAI,CAACY,SAAL;AACJC,gBAAAA,MAAM,EAAEC,OAAO,CAAC,8BAAD,CADX;AAEJC,gBAAAA,aAAa,EAAED,OAAO,CAAC,qCAAD,CAFlB;AAGJE,gBAAAA,WAAW,EAAEF,OAAO;AAHhB,iBAIDb,QAAQ,CAACgB,IAJR,E;;;AAMN,mBAAKC,QAAL,CAAc;AAAEP,gBAAAA,OAAO,EAAE;AAAX,eAAd;;;;;;;;;;;6BAGO;AACP,UAAI,CAAC,KAAKD,KAAL,CAAWC,OAAhB,EAAyB;AACvB,eAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAEN,QAAQ,CAACC,QAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CADF;AASD;;;;EAhC8BR,KAAK,CAACqB,S;;SAAlBX,G;AAmCrB,IAAMY,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\nimport Index from './lib/scene';\nimport { StyleProvider, Root } from 'native-base';\nimport getTheme from './native-base-theme/components';\nimport material from './native-base-theme/variables/material';\nimport { NavigationContainer } from '@react-navigation/native';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isReady: false,\n    };\n  }\n\n  async componentDidMount() {\n    await Font.loadAsync({\n      Roboto: require('native-base/Fonts/Roboto.ttf'),\n      Roboto_medium: require('native-base/Fonts/Roboto_medium.ttf'),\n      Inconsolata: require('./assets/fonts/Inconsolata/Inconsolata.ttf'),\n      ...Ionicons.font,\n    });\n    this.setState({ isReady: true });\n  }\n\n  render() {\n    if (!this.state.isReady) {\n      return <AppLoading />;\n    }\n\n    return (\n      <NavigationContainer>\n        <StyleProvider style={getTheme(material)}>\n          <Root>\n            <Index />\n          </Root>\n        </StyleProvider>\n      </NavigationContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}