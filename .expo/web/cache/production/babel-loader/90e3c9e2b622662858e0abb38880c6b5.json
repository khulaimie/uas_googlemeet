{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import{createNavigatorFactory,useNavigationBuilder,DrawerRouter}from'@react-navigation/native';import DrawerView from\"../views/DrawerView\";function DrawerNavigator(_ref){var initialRouteName=_ref.initialRouteName,openByDefault=_ref.openByDefault,backBehavior=_ref.backBehavior,children=_ref.children,screenOptions=_ref.screenOptions,rest=_objectWithoutProperties(_ref,[\"initialRouteName\",\"openByDefault\",\"backBehavior\",\"children\",\"screenOptions\"]);var _useNavigationBuilder=useNavigationBuilder(DrawerRouter,{initialRouteName:initialRouteName,openByDefault:openByDefault,backBehavior:backBehavior,children:children,screenOptions:screenOptions}),state=_useNavigationBuilder.state,descriptors=_useNavigationBuilder.descriptors,navigation=_useNavigationBuilder.navigation;return React.createElement(DrawerView,_extends({},rest,{state:state,descriptors:descriptors,navigation:navigation}));}export default createNavigatorFactory(DrawerNavigator);","map":{"version":3,"sources":["createDrawerNavigator.tsx"],"names":["rest","navigation","useNavigationBuilder","initialRouteName","openByDefault","backBehavior","children","screenOptions","createNavigatorFactory"],"mappings":"4WAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,sBAAA,CAAA,oBAAA,CAAA,YAAA,KAAA,0BAAA,CAWA,MAAA,CAAA,UAAA,2BAWA,QAAA,CAAA,eAAA,MAOU,IAPe,CAAA,gBAOf,MAPe,gBAOf,CAPe,aAOf,MAPe,aAOf,CAPe,YAOf,MAPe,YAOf,CAPe,QAOf,MAPe,QAOf,CAPe,aAOf,MAPe,aAOf,CADLA,IACK,yIACmCE,oBAAoB,CAAA,YAAA,CAM/C,CACdC,gBADc,CACdA,gBADc,CAEdC,aAFc,CAEdA,aAFc,CAGdC,YAHc,CAGdA,YAHc,CAIdC,QAJc,CAIdA,QAJc,CAKdC,aAAAA,CAAAA,aALc,CAN+C,CADvD,CACF,KADE,uBACF,KADE,CACF,WADE,uBACF,WADE,CACoBN,UADpB,uBACoBA,UADpB,CAeR,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,UAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,KAAK,CAFP,KAAA,CAGE,WAAW,CAHb,WAAA,CAIE,UAAU,CAAEA,UAJd,CAAA,CAAA,CADF,CAQD,CAED,cAAeO,CAAAA,sBAAsB,CAArC,eAAqC,CAArC","sourcesContent":["import * as React from 'react';\nimport {\n  createNavigatorFactory,\n  useNavigationBuilder,\n  DefaultNavigatorOptions,\n  DrawerNavigationState,\n  DrawerRouterOptions,\n  DrawerRouter,\n  DrawerActionHelpers,\n  ParamListBase,\n} from '@react-navigation/native';\n\nimport DrawerView from '../views/DrawerView';\nimport type {\n  DrawerNavigationOptions,\n  DrawerNavigationConfig,\n  DrawerNavigationEventMap,\n} from '../types';\n\ntype Props = DefaultNavigatorOptions<DrawerNavigationOptions> &\n  DrawerRouterOptions &\n  DrawerNavigationConfig;\n\nfunction DrawerNavigator({\n  initialRouteName,\n  openByDefault,\n  backBehavior,\n  children,\n  screenOptions,\n  ...rest\n}: Props) {\n  const { state, descriptors, navigation } = useNavigationBuilder<\n    DrawerNavigationState<ParamListBase>,\n    DrawerRouterOptions,\n    DrawerActionHelpers<ParamListBase>,\n    DrawerNavigationOptions,\n    DrawerNavigationEventMap\n  >(DrawerRouter, {\n    initialRouteName,\n    openByDefault,\n    backBehavior,\n    children,\n    screenOptions,\n  });\n\n  return (\n    <DrawerView\n      {...rest}\n      state={state}\n      descriptors={descriptors}\n      navigation={navigation}\n    />\n  );\n}\n\nexport default createNavigatorFactory<\n  DrawerNavigationState<ParamListBase>,\n  DrawerNavigationOptions,\n  DrawerNavigationEventMap,\n  typeof DrawerNavigator\n>(DrawerNavigator);\n"]},"metadata":{},"sourceType":"module"}